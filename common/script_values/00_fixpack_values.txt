unop_total_friends = {
	value = 0
	every_relation = {
		type = friend
		limit = { NOT = { has_character_flag = about_to_die_but_not_dead_yet_flag  } }
		add = 1
	}
}

lifestyle_blademaster_xp_gain_miniscule_value = {
	value = { 1 3 }
}

#Minor is already defined (3-7)

lifestyle_blademaster_xp_gain_medium_value = {
	value = { 8 12 }
}

lifestyle_blademaster_xp_gain_major_value = {
	value = { 13 17 }
}

lifestyle_blademaster_xp_gain_massive_value = {
	value = 20
}

lifestyle_blademaster_xp_loss_minor_value = {
	value = -5
}

lifestyle_blademaster_xp_loss_medium_value = {
	value = -10
}

lifestyle_blademaster_xp_loss_major_value = {
	value = -15
}

opinion_of_prev = {
	value = 0
	if = {
		limit = { save_temporary_opinion_value_as = { name = temp_op target = prev } }
		add = scope:temp_op
	}
}

opinion_of_root = {
	value = 0
	if = {
		limit = { save_temporary_opinion_value_as = { name = temp_op target = root } }
		add = scope:temp_op
	}
}

root_opinion = {
	value = 0
	if = {
		limit = { root = { save_temporary_opinion_value_as = { name = temp_op target = prev } } }
		add = scope:temp_op
	}
}

activity_host_soldier_female_chance = {
	if = {
		limit = {
			NOT = { dummy_female = { can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:activity.activity_host } } }
			dummy_male = { can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:activity.activity_host } }
		}
		add =  0
	}
	else_if = {
		limit = {
			dummy_female = { can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:activity.activity_host } }
			NOT = { dummy_male = { can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:activity.activity_host } } }
		}
		add =  100
	}
	else = {
	 	add = 50
	}
}

unop_current_situation_gold_increased_ransom = {
	if = {
		limit = {
			NOT = {
				exists = liege
			}
		}
		add = gold
	}
	else_if = {
		limit = {
			is_ruler = no
		}
		add = liege.gold
	}
	else = {
		add = gold
	}
	max = increased_ransom_cost_value
}

unop_court3031_number_of_counties_of_culture = {
	value = 0
	every_sub_realm_county = {
		limit = {
			culture = root.var:unop_court_3031_culture
		}
		add = 1
	}
}

unop_favour_the_countryside_basques_decision_counties_to_control_current_value = {
	value = 0
	every_county_in_region = {
		region = dlc_fp2_old_vasconia
		limit = {
			root = { completely_controls = prev }
		}
		add = 1
	}
}

unop_paiza_merchant_distance_modifier_value = {
	save_temporary_scope_as = merchant_origin_province
	value = 0
	if = {
		limit = { "scope:merchant_origin_province.squared_distance(root.domicile.domicile_location)" <= squared_distance_small }
		add = 200
	}
	else_if = {
		limit = { "scope:merchant_origin_province.squared_distance(root.domicile.domicile_location)" <= squared_distance_medium }
		add = 100
	}
	else_if = {
		limit = { "scope:merchant_origin_province.squared_distance(root.domicile.domicile_location)" <= squared_distance_large }
		add = 50
	}
	else_if = {
		limit = { "scope:merchant_origin_province.squared_distance(root.domicile.domicile_location)" <= squared_distance_huge }
		add = 20
	}
	else_if = {
		limit = { "scope:merchant_origin_province.squared_distance(root.domicile.domicile_location)" <= squared_distance_almost_massive }
		add = 10
	}
	else_if = {
		limit = { "scope:merchant_origin_province.squared_distance(root.domicile.domicile_location)" <= squared_distance_massive }
		add = 5
	}
}

unop_legitimacy_regent_swing_scale_multipler_value = {
	value = 1
	# LEGITIMACY OF RULER AFFECTS COSTS
	if = {
		limit = {
			has_legitimacy_flag = massively_increased_swing_scales_cost
		}
		multiply = 1.75
	}
	if = {
		limit = {
			has_legitimacy_flag = very_increased_swing_scales_cost
		}
		multiply = 1.5
	}
	if = {
		limit = {
			has_legitimacy_flag = increased_swing_scales_cost
		}
		multiply = 1.25
	}
	if = {
		limit = {
			has_legitimacy_flag = reduced_swing_scales_cost
		}
		multiply = 0.85
	}
	if = {
		limit = {
			has_legitimacy_flag = very_reduced_swing_scales_cost
		}
		multiply = 0.75
	}
	if = {
		limit = {
			has_legitimacy_flag = extra_reduced_swing_scales_cost
		}
		multiply = 0.5
	}
}

unop_swing_scales_influence_cost_value = {
	value = 0
	if = {
		limit = { scope:actor = { is_diarch_of_target = scope:recipient } }
		# Gate by liege tier.
		## Count.
		if = {
			limit = { scope:recipient.highest_held_title_tier <= tier_county }
			add = minor_influence_value
		}
		## Duke.
		else_if = {
			limit = { scope:recipient.highest_held_title_tier <= tier_duchy }
			add = medium_influence_value
		}
		## King or Emperor
		else = { add = major_influence_value }

		# Adjust how much this swing costs due to Legitimacy
		## Should only affect the regent, not the ruler
		# 1
		if = {
			limit = { scope:recipient.legitimacy_level = 1 }
			add = miniscule_influence_value
		}
		# 2
		else_if = {
			limit = { scope:recipient.legitimacy_level = 2 }
			add = minor_influence_value
		}
		# 3
		else_if = {
			limit = { scope:recipient.legitimacy_level = 3 }
			add = medium_influence_value
		}
		# 4
		else_if = {
			limit = { scope:recipient.legitimacy_level = 4 }
			add = major_influence_value
		}
		# 5
		else_if = {
			limit = { scope:recipient.legitimacy_level = 5 }
			add = massive_influence_value
		}
		else = {
			# Deliberately empty
			# Adjustable in the future if necessary
		}
	}
	else_if = {
		limit = { scope:recipient = { is_diarch_of_target = scope:actor } }
		# Gate by liege tier.
		## Count.
		if = {
			limit = { scope:actor.highest_held_title_tier <= tier_county }
			add = minor_influence_value
		}
		## Duke.
		else_if = {
			limit = { scope:actor.highest_held_title_tier <= tier_duchy }
			add = medium_influence_value
		}
		## King or Emperor
		else = { add = major_influence_value }

		# Adjust how much this swing costs due to Legitimacy
		## Should only affect the regent, not the ruler
		# 1
		if = {
			limit = { scope:actor.legitimacy_level = 1 }
			add = miniscule_influence_value
		}
		# 2
		else_if = {
			limit = { scope:actor.legitimacy_level = 2 }
			add = minor_influence_value
		}
		# 3
		else_if = {
			limit = { scope:actor.legitimacy_level = 3 }
			add = medium_influence_value
		}
		# 4
		else_if = {
			limit = { scope:actor.legitimacy_level = 4 }
			add = major_influence_value
		}
		# 5
		else_if = {
			limit = { scope:actor.legitimacy_level = 5 }
			add = massive_influence_value
		}
		else = {
			# Deliberately empty
			# Adjustable in the future if necessary
		}
	}
	else_if = {
		limit = { scope:actor = { is_liege_or_above_of = scope:recipient } }
		add = 666
	}
	else_if = {
		limit = { scope:recipient = { is_liege_or_above_of = scope:actor } }
		add = 999
	}
}
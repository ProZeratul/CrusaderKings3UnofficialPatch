
# Update points_of_interest_tracker_effect when you change this!

# Capitals
poi_capitals = {
	build_province_list = {
		every_kingdom = {
			limit = {
				this = this.holder.primary_title
			}
			holder.capital_province ?= {
				add_to_list = provinces
			}
		}
		every_empire = {
			limit = {
				this = this.holder.primary_title
			}
			holder.capital_province ?= {
				add_to_list = provinces
			}
		}
		every_hegemony = {
			limit = {
				this = this.holder.primary_title
			}
			holder.capital_province ?= {
				add_to_list = provinces
			}
		}
	}

	on_visit = {
		send_interface_toast = {
			title = poi_capitals.visit
			left_icon = root

			scope:province.barony.holder = {
				if = {
					limit = {
						primary_title = {
							tier >= tier_empire
						}
					}
					save_temporary_scope_value_as = {
						name = xp_gain_amount
						value = root.travel_major_xp
					}
				}
				else = {
					save_temporary_scope_value_as = {
						name = xp_gain_amount
						value = root.travel_medium_xp
					}
				}


				if = { # Merit-government Capitals that have royal courts give merit and the regular reward
					limit = {
						has_royal_court = yes
						government_allows = merit
						root = {
							government_allows = merit
						}
					}
					root = {
						change_merit = medium_merit_gain
					}
				}

				if = { # Merit-government Capitals without royal courts give just merit (no diplo)
					limit = {
						has_royal_court = no
						government_allows = merit
						root = {
							government_allows = merit
						}
					}
					root = {
						change_merit = medium_merit_gain
					}
				}
				else_if = {
					limit = {
						OR = {
							has_royal_court = no
							has_court_type = court_diplomatic
						}
					}
					root = {
						poi_lifestyle_experience_effect = {
							LIFESTYLE = diplomacy
							VALUE = scope:xp_gain_amount
						}
					}
				}
				else_if = {
					limit = {
						OR = {
							has_court_type = court_warlike
							has_court_type = court_tribal
							has_court_type = court_nomadic
						}
					}
					root = {
						poi_lifestyle_experience_effect = {
							LIFESTYLE = martial
							VALUE = scope:xp_gain_amount
						}
					}
				}
				else_if = {
					limit = {
						has_court_type = court_administrative
					}
					root = {
						poi_lifestyle_experience_effect = {
							LIFESTYLE = stewardship
							VALUE = scope:xp_gain_amount
						}
					}
				}
				else_if = {
					limit = {
						has_court_type = court_intrigue
					}
					root = {
						poi_lifestyle_experience_effect = {
							LIFESTYLE = intrigue
							VALUE = scope:xp_gain_amount
						}
					}
				}
				else_if = {
					limit = {
						has_court_type = court_scholarly
					}
					root = {
						poi_lifestyle_experience_effect = {
							LIFESTYLE = learning
							VALUE = scope:xp_gain_amount
						}
					}
				}
				else = {
					root = {
						poi_lifestyle_experience_effect = {
							LIFESTYLE = diplomacy
							VALUE = scope:xp_gain_amount
						}
					}
				}
				# Prestige for Wanderers
				wanderer_lifestyle_destination_effect = yes
			}

			traveler_travel_xp_effect = {
				MIN = 3
				MAX = 5
			}
			if = {
				limit = {
					has_government = landless_adventurer_government
					has_perk = organized_muster_rolls_perk
				}
				add_gold = see_how_its_done_gold_reward_value
			}
			if = {
				limit = {
					has_government = landless_adventurer_government
					has_perk = centralization_perk
				}
				custom_tooltip = {
					text = adventurers_centralization_perk.effect
				}
				every_courtier = {
					hidden_effect = {
						scope:province.barony.holder = {
							if = {
								limit = {
									has_royal_court = yes
									has_court_type = court_diplomatic
								}
								prev = {
									add_diplomacy_skill = 1
									force_character_skill_recalculation = yes
								}
							}
							else_if = {
								limit = {
									has_royal_court = yes
									has_court_type = court_warlike
								}
								prev = {
									add_martial_skill = 1
									force_character_skill_recalculation = yes
								}
							}
							else_if = {
								limit = {
									has_royal_court = yes
									has_court_type = court_administrative
								}
								prev = {
									add_stewardship_skill = 1
									force_character_skill_recalculation = yes
								}
							}
							else_if = {
								limit = {
									has_royal_court = yes
									has_court_type = court_intrigue
								}
								prev = {
									add_intrigue_skill = 1
									force_character_skill_recalculation = yes
								}
							}
							else_if = {
								limit = {
									has_royal_court = yes
									has_court_type = court_scholarly
								}
								prev = {
									add_learning_skill = 1
									force_character_skill_recalculation = yes
								}
							}
							else_if = {
								limit = {
									has_royal_court = yes
									OR = {
										has_court_type = court_tribal
										has_court_type = court_nomadic
									}
								}
								prev = {
									add_prowess_skill = 1
									force_character_skill_recalculation = yes
								}
							}
							else = {
								prev = {
									random_list = {
										1 = {
											add_prowess_skill = 1
										}
										1 = {
											add_learning_skill = 1
										}
										1 = {
											add_intrigue_skill = 1
										}
										1 = {
											add_stewardship_skill = 1
										}
										1 = {
											add_martial_skill = 1
										}
										1 = {
											add_diplomacy_skill = 1
										}
									}
									force_character_skill_recalculation = yes
								}
							}
						}
					}
				}
			}
		}

		visiting_poi_effect = yes
	}
}

# Walls and Forts
poi_special_buildings_martial = {
	build_province_list = {
		every_special_building_province = {
			limit = {
				OR = {
					has_building_with_flag = { flag = travel_point_of_interest_martial }
					has_building_with_flag = { flag = travel_point_of_interest_martial_minor }
				}
			}
			add_to_list = provinces
		}
	}

	on_visit = {
		send_interface_toast = {
			title = poi_special_buildings.visit
			left_icon = root
			if = {
				# Walls and Forts
				limit = {
					scope:province = {
						has_building_with_flag = { flag = travel_point_of_interest_martial }
					}
				}
				add_poi_martial_experience_effect = yes
				traveler_danger_xp_effect = {
					MIN = 3
					MAX = 5
				}
			}
			else_if = {
				# Minor POI (mostly for multi-province defenses like Hadrian's wall)
				limit = {
					scope:province = {
						has_building_with_flag = { flag = travel_point_of_interest_martial_minor }
					}
				}
				poi_lifestyle_experience_effect = {
					LIFESTYLE = martial
					VALUE = travel_miniscule_lifestyle_xp
				}
				traveler_travel_xp_effect = {
					MIN = 1
					MAX = 1
				}
			}
			else = {
				# Rest / Fallback
				add_poi_learning_experience_effect = yes
				traveler_travel_xp_effect = {
					MIN = 3
					MAX = 5
				}
			}
			if = {
				limit = {
					has_government = landless_adventurer_government
					has_perk = organized_muster_rolls_perk
				}
				add_gold = see_how_its_done_gold_reward_value
			}
			
			# Prestige for Wanderers
			wanderer_lifestyle_destination_effect = yes
		}
		
		#For Cilician Gates and other EP3 monuments
		trigger_event = {
			on_action = on_visited_ep3_monument
		}

		visiting_poi_effect = yes
	}
}

# Universities & places of general learning
poi_special_buildings_learning = {
	build_province_list = {
		every_special_building_province = {
			limit = {
				has_building_with_flag = { flag = travel_point_of_interest_learning }
			}
			add_to_list = provinces
		}
	}

	on_visit = {
		send_interface_toast = {
			title = poi_special_buildings.visit
			left_icon = root

			if = {
				limit = {
					 has_lifestyle = diplomacy_lifestyle
				}
				add_poi_diplomacy_experience_effect = yes
			}
			else_if = {
				limit = {
					has_lifestyle = martial_lifestyle
				}
				add_poi_martial_experience_effect = yes
			}
			else_if = {
				limit = {
					has_lifestyle = stewardship_lifestyle
				}
				add_poi_stewardship_experience_effect = yes
			}
			else_if = {
				limit = {
					has_lifestyle = intrigue_lifestyle
				}
				add_poi_intrigue_experience_effect = yes
			}
			else = {
				add_poi_learning_experience_effect = yes
			}
			# Prestige for Wanderers
			wanderer_lifestyle_destination_effect = yes

			traveler_travel_xp_effect = {
				MIN = 3
				MAX = 5
			}
			if = {
				limit = {
					has_government = landless_adventurer_government
					has_perk = organized_muster_rolls_perk
				}
				add_gold = see_how_its_done_gold_reward_value
			}
		}

		visiting_poi_effect = yes
	}
}

# Religious sites
poi_special_buildings_religious = {
	build_province_list = {
		every_special_building_province = {
			limit = {
				has_building_with_flag = { flag = travel_point_of_interest_religious }
			}
			add_to_list = provinces
		}
	}

	on_visit = {
		send_interface_toast = {
			title = poi_special_buildings.visit
			left_icon = root

			add_poi_learning_experience_effect = yes
			if = {
				limit = {
					scope:province.barony ?= {
						is_holy_site_of = root.faith
					}
				}
				add_piety = point_of_interest_piety_value
			}
			
			# Prestige for Wanderers
			wanderer_lifestyle_destination_effect = yes

			if = {
				limit = {
					has_trait = lifestyle_mystic
				}
				add_trait_xp = {
					trait = lifestyle_mystic
					value = lifestyle_mystic_xp_gain_minor_value
				}
			}

			traveler_travel_xp_effect = {
				MIN = 3
				MAX = 5
			}
			if = {
				limit = {
					has_government = landless_adventurer_government
					has_perk = organized_muster_rolls_perk
				}
				add_gold = see_how_its_done_gold_reward_value
			}
			if = {
				limit = {
					has_perk = church_and_state_perk
					has_government = landless_adventurer_government
				}
				add_piety = major_piety_gain
			}
		}

		visiting_poi_effect = yes
	}
}

# Palaces & Political places
poi_special_buildings_diplomatic = {
	build_province_list = {
		every_special_building_province = {
			limit = {
				has_building_with_flag = { flag = travel_point_of_interest_diplomatic }
			}
			add_to_list = provinces
		}
	}

	on_visit = {
		send_interface_toast = {
			title = poi_special_buildings.visit
			left_icon = root

			add_poi_diplomacy_experience_effect = yes

			# Prestige for Wanderers
			wanderer_lifestyle_destination_effect = yes

			traveler_travel_xp_effect = {
				MIN = 3
				MAX = 5
			}
			if = {
				limit = {
					has_government = landless_adventurer_government
					has_perk = organized_muster_rolls_perk
				}
				add_gold = see_how_its_done_gold_reward_value
			}
		}

		visiting_poi_effect = yes
	}
}

# Grand Cities
poi_grand_city = {
	build_province_list = {
		province:4828 = { add_to_list = provinces } #Baghdad
		province:2575 = { add_to_list = provinces } #Rome
		province:496 = { add_to_list = provinces } #Constantinople
	}

	on_visit = {
		trigger_event = {
			on_action = on_visited_grand_city
		}
		if = {
			limit = {
				scope:province.county.holder != root #If I own it then it does not make sense to visit it.
			}
			custom_tooltip = poi_grand_city_visit_event_tt
		}
		if = {
			limit = {
				NOT = {
					has_trait = lifestyle_traveler
				}
			}
			add_trait = lifestyle_traveler
			traveler_travel_xp_effect = {
				MIN = 1
				MAX = 3
			}
			if = {
				limit = {
					is_landless_adventurer = yes
					has_perk = organized_muster_rolls_perk
				}
				send_interface_toast = {
					title = poi_grand_city.visit
					left_icon = root
					
					add_gold = see_how_its_done_gold_reward_value #Unop: use the expected value
				}
			}
		}
		else = {
			send_interface_toast = {
				title = poi_grand_city.visit
				left_icon = root

				traveler_travel_xp_effect = {
					MIN = 3
					MAX = 5
				}
				if = {
					limit = {
						has_government = landless_adventurer_government
						has_perk = organized_muster_rolls_perk
					}
					add_gold = see_how_its_done_gold_reward_value #Unop: use the expected value
				}
			}
		}
		# Prestige for Wanderers
		wanderer_lifestyle_destination_effect = yes

		visiting_poi_effect = yes
	}
}

# Ancient / New wonders
poi_special_buildings_wonder = {
	build_province_list = {
		every_special_building_province = {
			limit = {
				has_building_with_flag = { flag = travel_point_of_interest_wonder }
			}
			add_to_list = provinces
		}
	}

	on_visit = {
		send_interface_toast = {
			title = poi_special_buildings.visit
			left_icon = root

			add_poi_stewardship_experience_effect = yes
			point_of_interest_prestige_effect = yes

			if = {
				limit = {
					has_trait = lifestyle_mystic
				}
				add_trait_xp = {
					trait = lifestyle_mystic
					value = lifestyle_mystic_xp_gain_minor_value
				}
			}

			traveler_travel_xp_effect = {
				MIN = 3
				MAX = 5
			}
			if = {
				limit = {
					has_government = landless_adventurer_government
					has_perk = organized_muster_rolls_perk
				}
				add_gold = see_how_its_done_gold_reward_value
			}
		}

		visiting_poi_effect = yes
	}
}

# Economic Buildings (mines, ports)
poi_special_buildings_economic = {
	build_province_list = {
		every_special_building_province = {
			limit = {
				has_building_with_flag = { flag = travel_point_of_interest_economic }
			}
			add_to_list = provinces
		}
	}

	on_visit = {
		send_interface_toast = {
			title = poi_special_buildings.visit
			left_icon = root

			add_poi_stewardship_experience_effect = yes

			# Prestige for Wanderers
			wanderer_lifestyle_destination_effect = yes

			traveler_danger_xp_effect = {
				MIN = 3
				MAX = 5
			}
			if = {
				limit = {
					has_government = landless_adventurer_government
					has_perk = organized_muster_rolls_perk
				}
				add_gold = see_how_its_done_gold_reward_value
			}
		}

		visiting_poi_effect = yes
	}
}

poi_mausoleum_at_halicarnassus = {
	on_visit = {
		send_interface_toast = {
			title = poi_mausoleum_at_halicarnassus.visit
			left_icon = root

			add_poi_stewardship_experience_effect = yes
			point_of_interest_prestige_effect = yes

			traveler_travel_xp_effect = {
				MIN = 3
				MAX = 5
			}
			if = {
				limit = {
					has_government = landless_adventurer_government
					has_perk = organized_muster_rolls_perk
				}
				add_gold = see_how_its_done_gold_reward_value
			}
		}

		visiting_poi_effect = yes
	}
}

poi_lighthouse_of_alexandria = {
	on_visit = {
		send_interface_toast = {
			title = poi_lighthouse_of_alexandria.visit
			left_icon = root

			add_poi_stewardship_experience_effect = yes
			point_of_interest_prestige_effect = yes

			traveler_travel_xp_effect = {
				MIN = 3
				MAX = 5
			}
			if = {
				limit = {
					has_government = landless_adventurer_government
					has_perk = organized_muster_rolls_perk
				}
				add_gold = see_how_its_done_gold_reward_value
			}
		}

		visiting_poi_effect = yes
	}
}

# Natural features, e.g. Mount X, Lake X
poi_natural_feature = {
	build_province_list = {
		every_special_building_province = {
			limit = {
				has_building_with_flag = { flag = travel_point_of_interest_natural_feature }
			}
			add_to_list = provinces
		}
	}

	on_visit = {
		send_interface_toast = {
			title = poi_natural_feature.visit
			left_icon = root
			add_poi_wanderer_experience_effect = yes
			stress_impact = { base = minor_stress_impact_loss }

			if = {
				limit = {
					NOT = {
						has_trait = lifestyle_traveler
					}
				}
				send_interface_toast = {
					title = poi_natural_feature.visit
					left_icon = root
					add_trait = lifestyle_traveler
					traveler_travel_xp_effect = {
						MIN = 1
						MAX = 3
					}
					if = {
						limit = {
							has_government = landless_adventurer_government
							has_perk = organized_muster_rolls_perk
						}
						add_gold = see_how_its_done_gold_reward_value #Unop: use the expected value
					}
				}
			}
			else = {
				send_interface_toast = {
					title = poi_natural_feature.visit
					left_icon = root
					traveler_travel_xp_effect = {
						MIN = 3
						MAX = 5
					}
					if = {
						limit = {
							has_government = landless_adventurer_government
							has_perk = organized_muster_rolls_perk
						}
						add_gold = see_how_its_done_gold_reward_value #Unop: use the expected value
					}
				}
			}

			# Prestige for Wanderers
			wanderer_lifestyle_destination_effect = yes
		}

		visiting_poi_effect = yes
	}
}

# Legend stuff
poi_legend_capitals = {
	build_province_list = {
		every_legend = {
			limit = {
				OR = {
					legend_quality = illustrious
					legend_quality = mythical
				}
			}
			legend_owner.capital_province ?= {
				add_to_list = provinces
			}
		}
	}

	on_visit = {
		send_interface_toast = {
			title = poi_legend_capitals.visit
			left_icon = root

			add_poi_diplomacy_experience_effect = yes
			traveler_travel_xp_effect = {
				MIN = 3
				MAX = 5
			}
			if = {
				limit = {
					has_government = landless_adventurer_government
					has_perk = organized_muster_rolls_perk
				}
				add_gold = see_how_its_done_gold_reward_value
			}
		}
		visiting_poi_effect = yes
	}
}

poi_battles = {
	build_province_list = {
		every_in_global_list = {
			variable = battle_poi_list
			limit = {
				has_variable = battle_poi_winner
				has_variable = battle_poi_loser
				has_variable = battle_poi_date_day
				has_variable = battle_poi_date_month
				has_variable = battle_poi_date_year
				NOT = { has_travel_point_of_interest = poi_battles_historical }
			}
			add_to_list = provinces
		}
	}

	on_visit = { # Unop: See issue #270
		show_as_tooltip = { #Unop: Re-add this in a show_as_tooltip so the order is just like vanilla (overkill but I like to be ISO)
			if = {
				limit = {
					OR = {
						has_variable = battle_poi_trait_gained
						number_of_commander_traits > 1
					}
				}
				add_poi_martial_experience_effect = yes
			}
			else = {
				poi_lifestyle_experience_effect = {
					LIFESTYLE = martial
					VALUE = travel_minor_lifestyle_xp
				}
			}
			# Prestige for Wanderers
			wanderer_lifestyle_destination_effect = yes
		}
		random_list = { #Unop: Add this here so the result displayed in the interface toast will be reliable and not lying
			80 = {
				save_scope_value_as = {
					name = unop_poi_battles_bonus
					value = flag:martial_xp
				}
				show_as_tooltip = {
					add_poi_martial_experience_effect = yes
				}
			}
			20 = {
				save_scope_value_as = {
					name = unop_poi_battles_bonus
					value = flag:trait
				}
				show_as_tooltip = {
					scope:province = {
						switch = {
							trigger = terrain
							forest = { root = { add_trait = forest_fighter } }
							taiga = { root = { add_trait = forest_fighter } }
							farmlands = { root = { add_trait = open_terrain_expert } }
							plains = { root = { add_trait = open_terrain_expert } }
							steppe = { root = { add_trait = open_terrain_expert } }
							hills = { root = { add_trait = rough_terrain_expert } }
							mountains = { root = { add_trait = rough_terrain_expert } }
							wetlands = { root = { add_trait = rough_terrain_expert } }
							drylands = { root = { add_trait = desert_warrior } }
							desert = { root = { add_trait = desert_warrior } }
							desert_mountains = { root = { add_trait = desert_warrior } }
							oasis = { root = { add_trait = desert_warrior } }
							jungle = { root = { add_trait = jungle_stalker } }
							floodplains = { root = { add_trait = flexible_leader } }
						}
					}
				}
			}
		}
		if = {
			limit = { location = scope:province }
			send_interface_toast = {
				title = poi_battles.visit
				left_icon = root

				if = {
					limit = {
						OR = {
							has_variable = battle_poi_trait_gained
							number_of_commander_traits > 1
						}
					}
					add_poi_martial_experience_effect = yes
				}
				else = {
					poi_lifestyle_experience_effect = {
						LIFESTYLE = martial
						VALUE = travel_minor_lifestyle_xp
					}
				}

				if = {
					limit = {
						NOR = {
							has_variable = battle_poi_trait_gained
							number_of_commander_traits > 1
						}
					}
					if = {
						limit = {
							scope:unop_poi_battles_bonus = flag:martial_xp
						}
						add_poi_martial_experience_effect = yes
					}
					else_if = {
						limit = {
							scope:unop_poi_battles_bonus = flag:trait
						}
						scope:province = {
							switch = {
								trigger = terrain
								forest = { root = { add_trait = forest_fighter } }
								taiga = { root = { add_trait = forest_fighter } }
								farmlands = { root = { add_trait = open_terrain_expert } }
								plains = { root = { add_trait = open_terrain_expert } }
								steppe = { root = { add_trait = open_terrain_expert } }
								hills = { root = { add_trait = rough_terrain_expert } }
								mountains = { root = { add_trait = rough_terrain_expert } }
								wetlands = { root = { add_trait = rough_terrain_expert } }
								drylands = { root = { add_trait = desert_warrior } }
								desert = { root = { add_trait = desert_warrior } }
								desert_mountains = { root = { add_trait = desert_warrior } }
								oasis = { root = { add_trait = desert_warrior } }
								jungle = { root = { add_trait = jungle_stalker } }
								floodplains = { root = { add_trait = flexible_leader } }
							}
							root = {
								set_variable = battle_poi_trait_gained
							}
						}
					}
					else = {
						error_log = "Unop: poi_battles > on_visit > unop_poi_battles_bonus is undefined"
						debug_log_scopes = yes
					}
				}

				traveler_danger_xp_effect = {
					MIN = 1
					MAX = 3
				}

				# Prestige for Wanderers
				wanderer_lifestyle_destination_effect = yes
			}
		}
		visiting_poi_effect = yes
	}
}

poi_battles_historical = {
	build_province_list = {
		# Note, please try to keep these in chronological order
		if = { # Battle of Yarmuk
			limit = { game_start_date > 636.8.20 }
			province:5954 = { add_to_list = provinces }
		}
		if = { # Battle of Aror
			limit = { game_start_date > 711.1.1 }
			province:1175 = { add_to_list = provinces }
		}
		if = { # Battle of Tours
			limit = { game_start_date > 732.10.10 }
			province:2253 = { add_to_list = provinces }
		}
		if = { # Battle of Talas
			limit = { game_start_date > 751.1.1 }
			province:7132 = { add_to_list = provinces }
		}
		if = { # Battle of Lechfeld
			limit = { game_start_date > 955.8.10 }
			province:2778 = { add_to_list = provinces }
		}
		if = { # Battle of Svolder
			limit = { game_start_date > 999.9.9 }
			province:2811 = { add_to_list = provinces }
		}
		if = { # Battle of Dandanaqan
			limit = { game_start_date > 1040.5.23 }
			province:4008 = { add_to_list = provinces }
		}
		if = { # Battle of Civitate
			limit = { game_start_date > 1053.6.18 }
			province:2605 = { add_to_list = provinces }
		}
		if = { # The Battle of Stamford Bridge
			limit = { game_start_date > 1066.9.25 }
			province:1595 = { add_to_list = provinces }
		}
		if = { # The Battle of Hastings
			limit = { game_start_date > 1066.10.14 }
			province:1509 = { add_to_list = provinces }
		}
		if = { # The Battle of Manzikert
			limit = { game_start_date > 1071.8.26 }
			province:701 = { add_to_list = provinces }
		}
	}

	on_visit = { # Unop: See issue #270
		show_as_tooltip = { #Unop: Re-add this in a show_as_tooltip so the order is just like vanilla (overkill but I like to be ISO)
			if = {
				limit = {
					OR = {
						has_variable = battle_poi_trait_gained
						number_of_commander_traits > 1
					}
				}
				add_poi_martial_experience_effect = yes
			}
			else = {
				poi_lifestyle_experience_effect = {
					LIFESTYLE = martial
					VALUE = travel_minor_lifestyle_xp
				}
			}
		}
		random_list = { #Unop: Add this here so the result displayed in the interface toast will be reliable and not lying
			80 = {
				save_scope_value_as = {
					name = unop_poi_battles_historical_bonus
					value = flag:martial_xp
				}
				show_as_tooltip = {
					add_poi_martial_experience_effect = yes
				}
			}
			20 = {
				save_scope_value_as = {
					name = unop_poi_battles_historical_bonus
					value = flag:trait
				}
				show_as_tooltip = {
					scope:province = {
						switch = {
							trigger = this
							# Tours
							province:2253 = { root = { add_trait = unyielding_defender } }
							# Lechfeld
							province:2778 = { root = { add_trait = open_terrain_expert } }
							# Hastings
							province:1509 = { root = { add_trait = aggressive_attacker } }
							# Stamford Bridge
							province:1595 = { root = { add_trait = organizer } }
							# Manzikert
							province:701 = { root = { add_trait = flexible_leader } }
							# Yarmuk
							province:5954 = { root = { add_trait = reckless } }
							# Dandanaqan
							province:4008 = { root = { add_trait = desert_warrior } }
							# Battle of Aror
							province:1175 = { root = { add_trait = flexible_leader } }
							# Battle of Svolder
							province:2811 = { root = { add_trait = holy_warrior } }
							# Battle of Civitate
							province:2605 = { root = { add_trait = open_terrain_expert } }
							# Battle of Talas
							province:7132 = { root = { add_trait = desert_warrior } }
						}
					}
				}
			}
		}

		send_interface_toast = {
			title = travel_point_historical_name_visit_message
			left_icon = root

			if = {
				limit = { location = scope:province }
				if = {
					limit = {
						OR = {
							has_variable = battle_poi_trait_gained
							number_of_commander_traits > 1
						}
					}
					add_poi_martial_experience_effect = yes
				}
				else = {
					poi_lifestyle_experience_effect = {
						LIFESTYLE = martial
						VALUE = travel_minor_lifestyle_xp
					}
				}
				if = {
					limit = {
						NOR = {
							has_variable = battle_poi_trait_gained
							number_of_commander_traits > 1
						}
					}
					if = {
						limit = {
							scope:unop_poi_battles_historical_bonus = flag:martial_xp
						}
						add_poi_martial_experience_effect = yes
					}
					else_if = {
						limit = {
							scope:unop_poi_battles_historical_bonus = flag:trait
						}
						scope:province = {
							switch = {
								trigger = this
								# Tours
								province:2253 = { root = { add_trait = unyielding_defender } }
								# Lechfeld
								province:2778 = { root = { add_trait = open_terrain_expert } }
								# Hastings
								province:1509 = { root = { add_trait = aggressive_attacker } }
								# Stamford Bridge
								province:1595 = { root = { add_trait = organizer } }
								# Manzikert
								province:701 = { root = { add_trait = flexible_leader } }
								# Yarmuk
								province:5954 = { root = { add_trait = reckless } }
								# Dandanaqan
								province:4008 = { root = { add_trait = desert_warrior } }
								# Battle of Aror
								province:1175 = { root = { add_trait = flexible_leader } }
								# Battle of Svolder
								province:2811 = { root = { add_trait = holy_warrior } }
								# Battle of Civitate
								province:2605 = { root = { add_trait = open_terrain_expert } }
								# Battle of Talas
								province:7132 = { root = { add_trait = desert_warrior } }
							}
						}
						set_variable = battle_poi_trait_gained
					}
					else = {
						error_log = "Unop: poi_battles_historical > on_visit > unop_poi_battles_historical_bonus is undefined"
						debug_log_scopes = yes
					}
				}
			}
			traveler_danger_xp_effect = {
				MIN = 1
				MAX = 3
			}

			# Prestige for Wanderers
			wanderer_lifestyle_destination_effect = yes
		}

		visiting_poi_effect = yes
	}
}

# Stress relief
poi_special_buildings_stress_relief = {
	build_province_list = {
		every_special_building_province = {
			limit = {
				has_building_with_flag = { flag = travel_point_of_interest_stress_relief }
			}
			add_to_list = provinces
		}
	}

	on_visit = {
		send_interface_toast = {
			title = poi_special_buildings.visit
			left_icon = root

			# Stress loss
			stress_impact = {
				base = -10
				lazy = -5
				content = -5
				eccentric = 5
			}
			
			# If you have the Reveler trait, gain some XP
			if = {
				limit = { has_trait = lifestyle_reveler }
				add_trait_xp = {
					trait = lifestyle_reveler
					value = 5
				}
			}
			
			# Prestige for Wanderers
			wanderer_lifestyle_destination_effect = yes

			# Travel trait XP
			traveler_travel_xp_effect = {
				MIN = 2
				MAX = 4
			}
		}
	}
}

poi_silk_road_node = {
	build_province_list = {
		every_special_building_province = {
			limit = {
				has_building_with_flag = { flag = silk_road_node }
			}
			add_to_list = provinces
		}
	}

	on_visit = {
		send_interface_toast = {
			title = poi_special_buildings.visit
			left_icon = root

			add_poi_stewardship_experience_effect = yes

			# Prestige for Wanderers
			wanderer_lifestyle_destination_effect = yes

			traveler_danger_xp_effect = {
				MIN = 3
				MAX = 5
			}
			if = {
				limit = {
					has_government = landless_adventurer_government
					has_perk = organized_muster_rolls_perk
				}
				add_gold = see_how_its_done_gold_reward_value
			}
		}

		visiting_poi_effect = yes
	}
}

# Religious sites
poi_mandala_capital = {
	build_province_list = {
		every_in_global_list = {
			variable = mandala_poi_list
			limit = { has_building_with_flag = { flag = mandala_capital_building } }
			add_to_list = provinces
		}
	}

	on_visit = {
		send_interface_toast = {
			title = poi_gp_buildings.visit
			left_icon = root

			add_learning_lifestyle_xp = minor_lifestyle_experience

			#Visiting Mandala Capital
			scope:province = {
				if = {
					limit = {  #Visiting Mandala Overlord
						root = {
							OR = {
								is_tributary = yes
								is_independent_ruler = no
							}
						}
						root.overlord ?= { government_has_flag = government_is_mandala }
						this = root.overlord.capital_province
						has_ruined_great_building = no
					}
					save_temporary_scope_value_as = {
						name = piety_gain_amount
						value = {
							value = {
								if = {
									limit = {
										root = { government_has_flag = government_is_mandala }
									}
									value = medium_piety_value
								}
								else = {
									value = minor_piety_value
								}
							}
							multiply = {
								switch = {
									trigger = has_building 
									mandala_capital_01 = { value = 1 }
									mandala_capital_02 = { value = 2 }
									mandala_capital_03 = { value = 3 }
									mandala_capital_04 = { value = 4 }
									mandala_capital_05 = { value = 5 }
								}
							}
						}
					}
				}
				else_if = { #Visiting Mandala Capital - Unaffiliated
					limit = {
						this.county.holder.capital_province = this
						NOT = { root = this.county.holder }
						has_ruined_great_building = no
						root = { #Only Tribals, Mandalas, or those of the same religion care
							OR = {
								government_has_flag = government_is_mandala
								government_has_flag = government_is_tribal
								faith.religion = prev.county.holder.faith.religion
							}
						}
					}
					save_temporary_scope_value_as = {
						name = piety_gain_amount
						value = {
							value = {
								if = {
									limit = {
										root = { government_has_flag = government_is_mandala }
									}
									value = minor_piety_value
								}
								else = {
									value = miniscule_piety_value
								}
							}
							multiply = {
								switch = {
									trigger = has_building 
									mandala_capital_01 = { value = 1 }
									mandala_capital_02 = { value = 2 }
									mandala_capital_03 = { value = 3 }
									mandala_capital_04 = { value = 4 }
									mandala_capital_05 = { value = 5 }
								}
							}
						}
					}
				}
				else_if = { #Visiting Mandala Capital - Ruined
					limit = {
						NOT = { root = this.county.holder }
						has_ruined_great_building = yes
						root = { #Only Tribals, Mandalas, or those of the same religion care
							OR = {
								government_has_flag = government_is_mandala
								government_has_flag = government_is_tribal
								faith.religion = prev.county.holder.faith.religion
							}
						}
					}
					save_temporary_scope_value_as = {
						name = piety_gain_amount
						value = miniscule_piety_value
					}
				}
				#Otherwise we do not care at all

				#Now you get your piety:
				if = {
					limit = { exists = scope:piety_gain_amount }
					root = { add_piety = scope:piety_gain_amount }
				}
			}
			
			# Prestige for Wanderers
			wanderer_lifestyle_destination_effect = yes

			if = { #Small XP Boost based on Mandala holders aspect
				limit = {
					government_has_flag = government_is_mandala
					scope:province.county.holder.capital_province = scope:province
					scope:province.county.holder = { has_mandala_aspect_trigger = yes }
				}
				scope:province.county.holder.house ?= {
					switch = {
						trigger = has_house_power_parameter
						aspect_of_creation = {
							root = {
								poi_lifestyle_experience_effect = {
									LIFESTYLE = stewardship
									VALUE = minor_lifestyle_xp
								}
							}
						}
						aspect_of_serenity = {
							root = {
								poi_lifestyle_experience_effect = {
									LIFESTYLE = diplomacy
									VALUE = minor_lifestyle_xp
								}
							}
						}
						aspect_of_destruction = {
							root = {
								poi_lifestyle_experience_effect = {
									LIFESTYLE = martial
									VALUE = minor_lifestyle_xp
								}
							}
						}
						aspect_of_trickery = {
							root = {
								poi_lifestyle_experience_effect = {
									LIFESTYLE = intrigue
									VALUE = minor_lifestyle_xp
								}
							}
						}
					}
				}
			}

			if = {
				limit = {
					has_trait = lifestyle_mystic
				}
				add_trait_xp = {
					trait = lifestyle_mystic
					value = lifestyle_mystic_xp_gain_minor_value
				}
			}

			#Dynasty Legacy - Legitimacy Bonus for Visiting Wanua or Mandala
			if = {
				limit = {
					dynasty ?= {
						has_dynasty_perk = tgp_sea_legacy_1
					}
				}
				add_legitimacy_effect = { LEGITIMACY = minor_legitimacy_gain }
			}

			traveler_travel_xp_effect = {
				MIN = 3
				MAX = 5
			}

			if = {
				limit = {
					has_government = landless_adventurer_government
					has_perk = organized_muster_rolls_perk
				}
				add_gold = see_how_its_done_gold_reward_value
			}

		}

		visiting_poi_effect = yes
	}
}
